{
  "address": "0xC1b8CE03a04DaA6dD6f93Db961A6ecc1Aaa73AdF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftMarketplace",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cryptoDevsNFT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yayVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum DAO.Vote",
          "name": "vote",
          "type": "uint8"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xab6f7eecd60262245d9c7bbfda459dbc9dbb319be1b101f4910c24139f68c140",
  "receipt": {
    "to": null,
    "from": "0xb1BfB47518E59Ad7568F3b6b0a71733A41fC99ad",
    "contractAddress": "0xC1b8CE03a04DaA6dD6f93Db961A6ecc1Aaa73AdF",
    "transactionIndex": 4,
    "gasUsed": "1353187",
    "logsBloom": "0x
    "blockHash": "0x1ca414c6e892714ac7583dd495e2c2d0e4eca2a126c4155688c71adcc42ec012",
    "transactionHash": "0xab6f7eecd60262245d9c7bbfda459dbc9dbb319be1b101f4910c24139f68c140",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 11441123,
        "transactionHash": "0xab6f7eecd60262245d9c7bbfda459dbc9dbb319be1b101f4910c24139f68c140",
        "address": "0xC1b8CE03a04DaA6dD6f93Db961A6ecc1Aaa73AdF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b1bfb47518e59ad7568f3b6b0a71733a41fc99ad"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0x1ca414c6e892714ac7583dd495e2c2d0e4eca2a126c4155688c71adcc42ec012"
      }
    ],
    "blockNumber": 11441123,
    "cumulativeGasUsed": "1674430",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1D9a57e70C8255774233f3b8E9A7B0b509b27aA5",
    "0x8BC6f5b2ffc5391d0B1a2871675CbbDBfBF6C116"
  ],
  "numDeployments": 3,
  "solcInputHash": "fa748223b7b4a0b47ac38d6e82dc42a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cryptoDevsNFT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yayVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nayVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum DAO.Vote\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawEther()\":{\"details\":\"withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DAO.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./ICryptoDevs.sol\\\";\\nimport \\\"./IFackNFTMarketplace.sol\\\";\\n\\npragma solidity ^0.8.0;\\n\\ncontract DAO is Ownable {\\n    struct Proposal {\\n        // nft tokenId\\n        uint256 nftTokenId;\\n        // the UNIX timestamp until with this proposal is active\\n        uint256 deadline;\\n        // vote yes for this proposal\\n        uint256 yayVotes;\\n        // vote no for this proposal\\n        uint256 nayVotes;\\n        // whether or not this proposal has been executed yet.\\n        // Cannot be executed before the deadLine has been exceeded\\n        bool executed;\\n        // a mapping of NFT tokenIds to booleans indicating whether that\\n        // NFT has already been used to cast a vote\\n        mapping(uint256 => bool) voters;\\n    }\\n    enum Vote {\\n        YAY,\\n        NAY\\n    }\\n\\n    // a mapping of ID to Proposal\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public numProposals;\\n    ICryptoDevs cryptoDevs;\\n    IFackNFTMarketplace nftMarketplace;\\n\\n    constructor(address _nftMarketplace, address _cryptoDevsNFT) payable {\\n        cryptoDevs = ICryptoDevs(_cryptoDevsNFT);\\n        nftMarketplace = IFackNFTMarketplace(_nftMarketplace);\\n    }\\n\\n    modifier nftHolderOnly() {\\n        require(cryptoDevs.balanceOf(msg.sender) > 0, \\\"NOT a DAO member\\\");\\n        _;\\n    }\\n\\n    modifier activeProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline > block.timestamp,\\n            \\\"DEADLINE_EXCEDDED\\\"\\n        );\\n        _;\\n    }\\n    modifier inactiveProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline <= block.timestamp,\\n            \\\"DEADLINE_NOT_EXCEEDED\\\"\\n        );\\n        require(\\n            proposals[proposalIndex].executed == false,\\n            \\\"PROPOSAL_ALREADY_EXECUTED\\\"\\n        );\\n        _;\\n    }\\n\\n    function createProposal(uint _nftTokenId)\\n        external\\n        nftHolderOnly\\n        returns (uint256)\\n    {\\n        require(nftMarketplace.available(_nftTokenId), \\\"NFT not for sale\\\");\\n        Proposal storage proposal = proposals[numProposals];\\n        proposal.nftTokenId = _nftTokenId;\\n        proposal.deadline = block.timestamp + 5 minutes;\\n        numProposals++;\\n        return numProposals - 1;\\n    }\\n\\n    function voteOnProposal(uint256 proposalIndex, Vote vote)\\n        external\\n        nftHolderOnly\\n        activeProposalOnly(proposalIndex)\\n    {\\n        Proposal storage proposal = proposals[proposalIndex];\\n        uint256 voterNFTBalance = cryptoDevs.balanceOf(msg.sender);\\n        uint256 numVotes = 0;\\n        for (uint256 i = 0; i < voterNFTBalance; i++) {\\n            uint256 tokenId = cryptoDevs.tokenOfOwnerByIndex(msg.sender, i);\\n            numVotes++;\\n            proposal.voters[tokenId] = true;\\n        }\\n        require(numVotes > 0, \\\"Already voted\\\");\\n        if (vote == Vote.YAY) {\\n            proposal.yayVotes += numVotes;\\n        } else {\\n            proposal.nayVotes += numVotes;\\n        }\\n    }\\n\\n    function executeProposal(uint256 proposalIndex)\\n        external\\n        nftHolderOnly\\n        inactiveProposalOnly(proposalIndex)\\n    {\\n        Proposal storage proposal = proposals[proposalIndex];\\n        if (proposal.yayVotes > proposal.nayVotes) {\\n            uint256 nftPrice = nftMarketplace.getPrice();\\n            require(address(this).balance >= nftPrice, \\\"Not enough funds\\\");\\n            nftMarketplace.purchase{value: nftPrice}(proposal.nftTokenId);\\n        }\\n        proposal.executed = true;\\n    }\\n\\n    function getNumProposals() external view returns (uint256) {\\n        return numProposals;\\n    }\\n\\n    /// @dev withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\\n    function withdrawEther() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    // The following two functions allow the contract to accept ETH deposits\\n    // directly from a wallet without calling a function\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n}\\n\",\"keccak256\":\"0xdf87c9722d3cfd0a78247905735b078674190d8fcbb65051c4f629f9c00f7f18\",\"license\":\"MIT\"},\"contracts/ICryptoDevs.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface ICryptoDevs {\\n    function tokenOfOwnerByIndex(address owner, uint256 index)\\n        external\\n        view\\n        returns (uint256 tokenId);\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0x90215ccd36685a5ee4aec08b59b4f411ac971905f11839403dc5b81f6acbffee\",\"license\":\"MIT\"},\"contracts/IFackNFTMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IFackNFTMarketplace {\\n    function getPrice() external view returns (uint256);\\n\\n    function available(uint256 _tokenId) external view returns (bool);\\n\\n    function purchase(uint256 _tokenId) external payable;\\n}\\n\",\"keccak256\":\"0xe2a48b9eea5fa7e66a1e8900806f25f42979290842b34ee2061b1360d5d8bc27\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526040516200189838038062001898833981810160405281019062000029919062000209565b620000496200003d620000d360201b60201c565b620000db60201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000250565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d182620001a4565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b600080604083850312156200022357620002226200019f565b5b60006200023385828601620001f2565b92505060206200024685828601620001f2565b9150509250929050565b61163880620002606000396000f3fe6080604052600436106100955760003560e01c80637362377b116100595780637362377b14610187578063798974dd1461019e5780638da5cb5b146101c9578063efafb22e146101f4578063f2fde38b1461021d5761009c565b8063013cf08b1461009e5780630d61b519146100df578063400e3949146101085780635a43dc0014610133578063715018a6146101705761009c565b3661009c57005b005b3480156100aa57600080fd5b506100c560048036038101906100c09190610e4e565b610246565b6040516100d6959493929190610ea5565b60405180910390f35b3480156100eb57600080fd5b5061010660048036038101906101019190610e4e565b610289565b005b34801561011457600080fd5b5061011d6105e0565b60405161012a9190610ef8565b60405180910390f35b34801561013f57600080fd5b5061015a60048036038101906101559190610e4e565b6105e6565b6040516101679190610ef8565b60405180910390f35b34801561017c57600080fd5b50610185610807565b005b34801561019357600080fd5b5061019c61081b565b005b3480156101aa57600080fd5b506101b3610873565b6040516101c09190610ef8565b60405180910390f35b3480156101d557600080fd5b506101de61087d565b6040516101eb9190610f54565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610f94565b6108a6565b005b34801561022957600080fd5b50610244600480360381019061023f9190611000565b610c46565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102e69190610f54565b602060405180830381865afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190611042565b11610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906110cc565b60405180910390fd5b8042600160008381526020019081526020016000206001015411156103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890611138565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff1615151461042b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610422906111a4565b60405180910390fd5b60006001600084815260200190815260200160002090508060030154816002015411156105be576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e59190611042565b90508047101561052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190611210565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b815260040161058a9190610ef8565b6000604051808303818588803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106449190610f54565b602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611042565b116106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc906110cc565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b81526004016107209190610ef8565b602060405180830381865afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610761919061125c565b6107a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610797906112d5565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107d09190611324565b8160010181905550600260008154809291906107eb90611358565b919050555060016002546107ff91906113a0565b915050919050565b61080f610cc9565b6108196000610d47565b565b610823610cc9565b61082b61087d565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b50565b6000600254905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109039190610f54565b602060405180830381865afa158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190611042565b11610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b906110cc565b60405180910390fd5b81426001600083815260200190815260200160002060010154116109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490611420565b60405180910390fd5b60006001600085815260200190815260200160002090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a519190610f54565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190611042565b90506000805b82811015610b92576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610aff929190611440565b602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190611042565b90508280610b4d90611358565b935050600185600501600083815260200190815260200160002060006101000a81548160ff021916908315150217905550508080610b8a90611358565b915050610a98565b5060008111610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd906114b5565b60405180910390fd5b60006001811115610bea57610be96114d5565b5b856001811115610bfd57610bfc6114d5565b5b03610c225780836002016000828254610c169190611324565b92505081905550610c3e565b80836003016000828254610c369190611324565b925050819055505b505050505050565b610c4e610cc9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611576565b60405180910390fd5b610cc681610d47565b50565b610cd1610e0b565b73ffffffffffffffffffffffffffffffffffffffff16610cef61087d565b73ffffffffffffffffffffffffffffffffffffffff1614610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c906115e2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610e2b81610e18565b8114610e3657600080fd5b50565b600081359050610e4881610e22565b92915050565b600060208284031215610e6457610e63610e13565b5b6000610e7284828501610e39565b91505092915050565b610e8481610e18565b82525050565b60008115159050919050565b610e9f81610e8a565b82525050565b600060a082019050610eba6000830188610e7b565b610ec76020830187610e7b565b610ed46040830186610e7b565b610ee16060830185610e7b565b610eee6080830184610e96565b9695505050505050565b6000602082019050610f0d6000830184610e7b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3e82610f13565b9050919050565b610f4e81610f33565b82525050565b6000602082019050610f696000830184610f45565b92915050565b60028110610f7c57600080fd5b50565b600081359050610f8e81610f6f565b92915050565b60008060408385031215610fab57610faa610e13565b5b6000610fb985828601610e39565b9250506020610fca85828601610f7f565b9150509250929050565b610fdd81610f33565b8114610fe857600080fd5b50565b600081359050610ffa81610fd4565b92915050565b60006020828403121561101657611015610e13565b5b600061102484828501610feb565b91505092915050565b60008151905061103c81610e22565b92915050565b60006020828403121561105857611057610e13565b5b60006110668482850161102d565b91505092915050565b600082825260208201905092915050565b7f4e4f5420612044414f206d656d62657200000000000000000000000000000000600082015250565b60006110b660108361106f565b91506110c182611080565b602082019050919050565b600060208201905081810360008301526110e5816110a9565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b600061112260158361106f565b915061112d826110ec565b602082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b600061118e60198361106f565b915061119982611158565b602082019050919050565b600060208201905081810360008301526111bd81611181565b9050919050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006111fa60108361106f565b9150611205826111c4565b602082019050919050565b60006020820190508181036000830152611229816111ed565b9050919050565b61123981610e8a565b811461124457600080fd5b50565b60008151905061125681611230565b92915050565b60006020828403121561127257611271610e13565b5b600061128084828501611247565b91505092915050565b7f4e4654206e6f7420666f722073616c6500000000000000000000000000000000600082015250565b60006112bf60108361106f565b91506112ca82611289565b602082019050919050565b600060208201905081810360008301526112ee816112b2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132f82610e18565b915061133a83610e18565b9250828201905080821115611352576113516112f5565b5b92915050565b600061136382610e18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611395576113946112f5565b5b600182019050919050565b60006113ab82610e18565b91506113b683610e18565b92508282039050818111156113ce576113cd6112f5565b5b92915050565b7f444541444c494e455f4558434544444544000000000000000000000000000000600082015250565b600061140a60118361106f565b9150611415826113d4565b602082019050919050565b60006020820190508181036000830152611439816113fd565b9050919050565b60006040820190506114556000830185610f45565b6114626020830184610e7b565b9392505050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061149f600d8361106f565b91506114aa82611469565b602082019050919050565b600060208201905081810360008301526114ce81611492565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061156060268361106f565b915061156b82611504565b604082019050919050565b6000602082019050818103600083015261158f81611553565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115cc60208361106f565b91506115d782611596565b602082019050919050565b600060208201905081810360008301526115fb816115bf565b905091905056fea2646970667358221220852db6d512659a6dad2fbb988b904482513995ab99b74a689c88ced8dfe5c02c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80637362377b116100595780637362377b14610187578063798974dd1461019e5780638da5cb5b146101c9578063efafb22e146101f4578063f2fde38b1461021d5761009c565b8063013cf08b1461009e5780630d61b519146100df578063400e3949146101085780635a43dc0014610133578063715018a6146101705761009c565b3661009c57005b005b3480156100aa57600080fd5b506100c560048036038101906100c09190610e4e565b610246565b6040516100d6959493929190610ea5565b60405180910390f35b3480156100eb57600080fd5b5061010660048036038101906101019190610e4e565b610289565b005b34801561011457600080fd5b5061011d6105e0565b60405161012a9190610ef8565b60405180910390f35b34801561013f57600080fd5b5061015a60048036038101906101559190610e4e565b6105e6565b6040516101679190610ef8565b60405180910390f35b34801561017c57600080fd5b50610185610807565b005b34801561019357600080fd5b5061019c61081b565b005b3480156101aa57600080fd5b506101b3610873565b6040516101c09190610ef8565b60405180910390f35b3480156101d557600080fd5b506101de61087d565b6040516101eb9190610f54565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610f94565b6108a6565b005b34801561022957600080fd5b50610244600480360381019061023f9190611000565b610c46565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102e69190610f54565b602060405180830381865afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190611042565b11610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906110cc565b60405180910390fd5b8042600160008381526020019081526020016000206001015411156103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890611138565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff1615151461042b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610422906111a4565b60405180910390fd5b60006001600084815260200190815260200160002090508060030154816002015411156105be576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e59190611042565b90508047101561052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190611210565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b815260040161058a9190610ef8565b6000604051808303818588803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106449190610f54565b602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611042565b116106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc906110cc565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b81526004016107209190610ef8565b602060405180830381865afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610761919061125c565b6107a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610797906112d5565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107d09190611324565b8160010181905550600260008154809291906107eb90611358565b919050555060016002546107ff91906113a0565b915050919050565b61080f610cc9565b6108196000610d47565b565b610823610cc9565b61082b61087d565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b50565b6000600254905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109039190610f54565b602060405180830381865afa158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190611042565b11610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b906110cc565b60405180910390fd5b81426001600083815260200190815260200160002060010154116109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d490611420565b60405180910390fd5b60006001600085815260200190815260200160002090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a519190610f54565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190611042565b90506000805b82811015610b92576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610aff929190611440565b602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190611042565b90508280610b4d90611358565b935050600185600501600083815260200190815260200160002060006101000a81548160ff021916908315150217905550508080610b8a90611358565b915050610a98565b5060008111610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd906114b5565b60405180910390fd5b60006001811115610bea57610be96114d5565b5b856001811115610bfd57610bfc6114d5565b5b03610c225780836002016000828254610c169190611324565b92505081905550610c3e565b80836003016000828254610c369190611324565b925050819055505b505050505050565b610c4e610cc9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611576565b60405180910390fd5b610cc681610d47565b50565b610cd1610e0b565b73ffffffffffffffffffffffffffffffffffffffff16610cef61087d565b73ffffffffffffffffffffffffffffffffffffffff1614610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c906115e2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610e2b81610e18565b8114610e3657600080fd5b50565b600081359050610e4881610e22565b92915050565b600060208284031215610e6457610e63610e13565b5b6000610e7284828501610e39565b91505092915050565b610e8481610e18565b82525050565b60008115159050919050565b610e9f81610e8a565b82525050565b600060a082019050610eba6000830188610e7b565b610ec76020830187610e7b565b610ed46040830186610e7b565b610ee16060830185610e7b565b610eee6080830184610e96565b9695505050505050565b6000602082019050610f0d6000830184610e7b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3e82610f13565b9050919050565b610f4e81610f33565b82525050565b6000602082019050610f696000830184610f45565b92915050565b60028110610f7c57600080fd5b50565b600081359050610f8e81610f6f565b92915050565b60008060408385031215610fab57610faa610e13565b5b6000610fb985828601610e39565b9250506020610fca85828601610f7f565b9150509250929050565b610fdd81610f33565b8114610fe857600080fd5b50565b600081359050610ffa81610fd4565b92915050565b60006020828403121561101657611015610e13565b5b600061102484828501610feb565b91505092915050565b60008151905061103c81610e22565b92915050565b60006020828403121561105857611057610e13565b5b60006110668482850161102d565b91505092915050565b600082825260208201905092915050565b7f4e4f5420612044414f206d656d62657200000000000000000000000000000000600082015250565b60006110b660108361106f565b91506110c182611080565b602082019050919050565b600060208201905081810360008301526110e5816110a9565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b600061112260158361106f565b915061112d826110ec565b602082019050919050565b6000602082019050818103600083015261115181611115565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b600061118e60198361106f565b915061119982611158565b602082019050919050565b600060208201905081810360008301526111bd81611181565b9050919050565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b60006111fa60108361106f565b9150611205826111c4565b602082019050919050565b60006020820190508181036000830152611229816111ed565b9050919050565b61123981610e8a565b811461124457600080fd5b50565b60008151905061125681611230565b92915050565b60006020828403121561127257611271610e13565b5b600061128084828501611247565b91505092915050565b7f4e4654206e6f7420666f722073616c6500000000000000000000000000000000600082015250565b60006112bf60108361106f565b91506112ca82611289565b602082019050919050565b600060208201905081810360008301526112ee816112b2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132f82610e18565b915061133a83610e18565b9250828201905080821115611352576113516112f5565b5b92915050565b600061136382610e18565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611395576113946112f5565b5b600182019050919050565b60006113ab82610e18565b91506113b683610e18565b92508282039050818111156113ce576113cd6112f5565b5b92915050565b7f444541444c494e455f4558434544444544000000000000000000000000000000600082015250565b600061140a60118361106f565b9150611415826113d4565b602082019050919050565b60006020820190508181036000830152611439816113fd565b9050919050565b60006040820190506114556000830185610f45565b6114626020830184610e7b565b9392505050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061149f600d8361106f565b91506114aa82611469565b602082019050919050565b600060208201905081810360008301526114ce81611492565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061156060268361106f565b915061156b82611504565b604082019050919050565b6000602082019050818103600083015261158f81611553565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115cc60208361106f565b91506115d782611596565b602082019050919050565b600060208201905081810360008301526115fb816115bf565b905091905056fea2646970667358221220852db6d512659a6dad2fbb988b904482513995ab99b74a689c88ced8dfe5c02c64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawEther()": {
        "details": "withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/DAO.sol:DAO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3363,
        "contract": "contracts/DAO.sol:DAO",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)3355_storage)"
      },
      {
        "astId": 3365,
        "contract": "contracts/DAO.sol:DAO",
        "label": "numProposals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3368,
        "contract": "contracts/DAO.sol:DAO",
        "label": "cryptoDevs",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ICryptoDevs)3762"
      },
      {
        "astId": 3371,
        "contract": "contracts/DAO.sol:DAO",
        "label": "nftMarketplace",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IFackNFTMarketplace)3782"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICryptoDevs)3762": {
        "encoding": "inplace",
        "label": "contract ICryptoDevs",
        "numberOfBytes": "20"
      },
      "t_contract(IFackNFTMarketplace)3782": {
        "encoding": "inplace",
        "label": "contract IFackNFTMarketplace",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)3355_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)3355_storage"
      },
      "t_struct(Proposal)3355_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Proposal",
        "members": [
          {
            "astId": 3342,
            "contract": "contracts/DAO.sol:DAO",
            "label": "nftTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3344,
            "contract": "contracts/DAO.sol:DAO",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3346,
            "contract": "contracts/DAO.sol:DAO",
            "label": "yayVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3348,
            "contract": "contracts/DAO.sol:DAO",
            "label": "nayVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3350,
            "contract": "contracts/DAO.sol:DAO",
            "label": "executed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 3354,
            "contract": "contracts/DAO.sol:DAO",
            "label": "voters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}